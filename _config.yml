repository: uittorio/cv
favicon: images/favicon.ico

version: 2

name: Vittorio Guerriero
title: Software Engineer
email: vittorio.gue@gmail.com
website: https://uittorio.github.io/

darkmode: true

github_username:  uittorio
linkedin_username: vittorio-guerriero

additional_links:
- title: ts-auto-mock
  icon: fas fa-globe
  url: https://typescript-tdd.github.io/ts-auto-mock/

about_profile_image: images/profile.jpg
about_content: | 
  Hi, my name's Vittorio Guerriero 

  Most of the times I have no idea what I am doing.  
  
  I have about 10 years of experience, mostly focus on Web applications using Typescript/Javascript.
  I am in love with extreme programming. 
  I love that each single commit, even one line of code, should go the fastest way possible to production! 
  
  When refining something, these are some of the questions I ask the team:
     - Why are we doing this?      
     - How do we know that it works?
     - How do we know that it doesnt work?

content:
  - title: Projects
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: Ts auto mock
        link: https://typescript-tdd.github.io/ts-auto-mock/
        # link_text: Project Website
        additional_links:
          - title: github link
            icon: fab fa-github
            url: https://github.com/Typescript-TDD/ts-auto-mock/
          # - title:  Github page for project (eg. sproogen/modern-resume-theme)
          #   icon: fab fa-github
          #   url: Link to project (eg. sproogen.github.io/modern-resume-theme)
        quote: >
          TypeScript transformer to create mocks from any type
        description: | 
          I've started this project with a friend to find a better alternative to the current mocking ecosystem in Typescript.
          The project has  more than <mark>500</mark> Stars and <mark>30k</mark> downloads a week
          
          ---

      - layout: top-middle
        title: Arduino pomodoro timer
        link: https://github.com/uittorio/arduino-timer
        quote: |
          Every developer needs a break! I've created this device to help me focus while working. 
          A short break every 30 minutes.
        description: |
          {:refdef: style="text-align: center; width: 50%; margin: auto;" }
          ![Arduino](images/arduino.jpg "Trees")
          {: refdef}
          ---

      - layout: top-middle
        title: Wedding website
        link: https://marlenevittorio.github.io/
        quote: This is nothing special, but if we want to know me better there is a photo section with some funny pictures about my wedding

  - title: Experience
    layout: list
    content:
      - layout: left
        title: Cazoo
        link: cazoo.co.uk

        sub_title: Senior Software Engineer
        caption: December 2019 - Present
        description: |
          At Cazoo we are following Extreme programming practises; tdd, pair programming, mob programming and continuous integration.        
          
          I initially worked on the team that was responsible for developing and maintaining the web application to allow customers to finance their cars.
          After a few months I've started mentoring other engineers to improve the quality of their systems.
          
          My main focus is currently to teach/mentor/coach other engineers in testing practises, quality, observability and pair programming techniques.
          I've introduced a few teams to hexagonal architecture and domain driven design. I strongly believe that engineers needs day to day coaching within the team.
          Most companies, Cazoo includes, assumes that coaching is a native skills of Senior software engineers, but is often forgotten that it is a skill that needs to be nurtured and trained.
          
          I've lead an initiative to improve and scale contract testing.
          
          Contract testing is a beauty and still a controversial topic. We were trying to reduce the amount of slow/brittle e2e testing on our application via using Contract testing.
          Teams struggled to find common practises and to setup contract testing correctly. I've helped defining and implementing common tools to implement Contract testing.  
      
          What did I learn? Too much to list here!
          Finally, a company where extreme programming techniques are actually practised.
          - Test driven development
          - Mob programming
          - Pair programming
          - Continuous delivery
          - Continuous integration
          - Hexagonal architecture
          - Trunk based development
          - Observability
          - Domain driven design
          - ... and more                

      - layout: left
        title: Liberis
        link: liberis.co.uk

        sub_title: Senior Software Engineer
        caption: January 2019 - December 2019
        quote: >
          Short but sweet
        description: |
          At Liberis I had the opportunity to help the engineering team to define their frontend application architecture.
          The team was originally using a beautiful functional framework called Elm, for hiring purposes Liberis decided to move to React.
          I've organised sessions and created templated to simplify the work to migrate to React. 
          
          What did I learn?
          
          Liberis was my second experience as Full stack engineer. 
          The company was moving from on-premises services to the cloud! Wow. I didn't even know the meaning of on-premises! :)
          While helping with frontend technologies I dive into Kubernetes, docker and Azure cloud.           

      - layout: left
        title: MHR
        link: mhr.co.uk

        sub_title: Frontend engineer
        caption: May 2015 - June 2018
        quote: >
          Vittorio, welcome to the UK!! New adventure ahead.
        description: |
          I am originally from Italy. In 2015 I made a bold move, I've decide to move to the UK.
          I had a few years of self taught experience in programming, I had no idea what would be working in a bigger company where they use works like Agile, testing, deployments.
          
          MHR was a though journey because I had no real commercial experience in programming. After a few months of struggle I step up and made a difference.
          I've stared exploring concept such as SOLID, Agile and test driven development. The company was not really doing these things right but with a small working group we've managed to learn these independently.                 

  - title: A Little More About Me
    layout: text
    content: | 
      Alongside my interests in networks and software engineering some of my other interests and hobbies are:      
      - Gaming - 
      - Baking - I don't like cooking but I love baking bread!!          

footer_show_references: true

remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
